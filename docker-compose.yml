version: '3.3'
services:

  # Running postgres on port 5432
  postgres:
    image: postgres:11.1
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      node_net:
        ipv4_address: 172.21.0.2

  # A service container to
  dbs-configurator:
    build:
      context: './dbs-configurator'
    container_name: dbs-configurator
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  # Running grafana on port 8080
  grafana:
    build:
      context: './grafana'
    container_name: grafana
    depends_on:
      - postgres
    environment:
      - GF_SERVER_ROOT_URL
      - GF_SERVER_DOMAIN
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_PG_USER=postgres
      - GF_PG_PASSWORD=postgres
      - GF_SMTP_ENABLED
      - GF_SMTP_HOST
      - GF_SMTP_FROM_ADDRESS
      - GF_SMTP_SKIP_VERIFY
    ports:
      - '8080:3000'
    user: "root"
    volumes:
      - grafana_storage:/var/lib/grafana


  # Data analytics and NLP worker 
  analyzer:
    build:
      context: './analyzer'
    container_name: analyzer
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      node_net:
        ipv4_address: 172.21.0.3


networks:
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16

volumes:
  dbdata:
  grafana_storage:
